ext.versions = [
        code                         : 1,
        name                         : '1.0',

        minSdk                       : 19,
        targetSdk                    : 25,
        compileSdk                   : 25,
        buildTools                   : '25.0.3',

        androidGradlePlugin          : '2.3.3',
        retrolambdaGradlePlugin      : '3.6.1',

        supportLibs                  : '25.3.1',
        supportConstraintLayout      : '1.0.2',
        butterKnife                  : '8.7.0',
        icepick                      : '3.2.0',
        retrofit                     : '2.3.0',
        rxjava                       : '2.1.1',
        rxandroid                    : '2.0.1',
        firebase                     : '0.7.0',
        picasso                      : '2.5.2',
        dagger                       : '2.11',
        rxbinding                    : '2.0.0',
        googlePlaces                 : '11.0.2',
        storIO                       : '1.12.3',

        junit                        : '4.12',
        mockito                      : '2.1.0',
        robolectric                  : '3.3.2',
        powermock                    : '1.6.6',

        espresso                     : '2.2.2',
        uiAutomator                  : '2.1.1',
        robotium                     : '5.6.1'
]


ext.gradlePlugins = [
        android          : "com.android.tools.build:gradle:$versions.androidGradlePlugin",
        retrolambda      : "me.tatarka:gradle-retrolambda:$versions.retrolambdaGradlePlugin",
]


ext.libraries = [


        autoValue               : "com.google.auto.value:auto-value:$versions.autoValue",

        supportAppCompat        : "com.android.support:appcompat-v7:$versions.supportLibs",
        supportDesign           : "com.android.support:design:$versions.supportLibs",
        supportConstraintLayout : "com.android.support.constraint:constraint-layout:$versions.supportConstraintLayout",
        supportPreference       : "com.android.support:preference-v7:$versions.supportLibs",
        supportAnnotations      : "com.android.support:support-annotations:$versions.supportLibs",

        butterKnife             : "com.jakewharton:butterknife:$versions.butterKnife",
        butterKnifeCompiler     : "com.jakewharton:butterknife-compiler:$versions.butterKnife",
        icepick                 : "frankiesardo:icepick:$versions.icepick",
        icepickProcessor        : "frankiesardo:icepick-processor:$versions.icepick",
        retrofit                : "com.squareup.retrofit2:retrofit:$versions.retrofit",
        retrofitRxAdapter       : "com.squareup.retrofit2:adapter-rxjava2:$versions.retrofit",
        retrofitGsonConverter   : "com.squareup.retrofit2:converter-gson:$versions.retrofit",
        rxjava                  : "io.reactivex.rxjava2:rxjava:$versions.rxjava",
        rxandroid               : "io.reactivex.rxjava2:rxandroid:$versions.rxandroid",
        firebase                : "com.firebase:firebase-jobdispatcher:$versions.firebase",
        picasso                 : "com.squareup.picasso:picasso:$versions.picasso",
        dagger                  : "com.google.dagger:dagger:$versions.dagger",
        daggerProcessor         : "com.google.dagger:dagger-compiler:$versions.dagger",
        rxbinding               : "com.jakewharton.rxbinding2:rxbinding:$versions.rxbinding",
        rxbinding_v7            : "com.jakewharton.rxbinding2:rxbinding-appcompat-v7:$versions.rxbinding",
        googlePlaces            : "com.google.android.gms:play-services-places:$versions.googlePlaces",


        junit                   : "junit:junit:$versions.junit",
        supportTestRunner       : "com.android.support.test:runner:$versions.supportTestRunner",
        supportTestRules        : "com.android.support.test:rules:$versions.supportTestRunner",
        mockito                 : "org.mockito:mockito-core:$versions.mockito",
        robolectric             : "org.robolectric:robolectric:$versions.robolectric",
        powermock               : "org.powermock:powermock:$versions.powermock",
        powermockJunit          : "org.powermock:powermock-module-junit4:$versions.powermock",
        powermockApi            : "org.powermock:powermock-api-mockito:$versions.powermock",
        powermockRule           : "org.powermock:powermock-module-junit4-rule:$versions.powermock",
        powermockClassloader    : "org.powermock:powermock-classloading-xstream:$versions.powermock",

        espressoCore            : "com.android.support.test.espresso:espresso-core:$versions.espresso",
        uiAutomator             : "com.android.support.test.uiautomator:uiautomator-v18:$versions.uiAutomator",
        robotium                : "com.jayway.android.robotium:robotium-solo:$versions.robotium",

        storIO                  : "com.pushtorefresh.storio:sqlite:$versions.storIO",
        storIOAnnotations       : "com.pushtorefresh.storio:sqlite-annotations:$versions.storIO",
        storIOProcessor         : "com.pushtorefresh.storio:sqlite-annotations-processor:$versions.storIO"
]