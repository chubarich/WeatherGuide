apply plugin: 'com.android.application'
apply plugin: 'me.tatarka.retrolambda'

def keystorePropertiesFile = rootProject.file("keystore.properties")
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

android {
    signingConfigs {
        config {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }
    }

    compileSdkVersion versions.compileSdk
    buildToolsVersion versions.buildTools
    defaultConfig {
        applicationId "com.example.julia.weatherguide"
        minSdkVersion versions.minSdk
        targetSdkVersion versions.targetSdk
        versionCode versions.code
        versionName versions.name
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        debug {
            debuggable true
            signingConfig signingConfigs.config
        }
        release {
            debuggable true
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.config
        }
    }
    buildTypes.each {
        it.buildConfigField 'String', 'OPEN_WEATHER_MAP_API_KEY', keystoreProperties['OpenWeatherMapApiKey'];
        it.buildConfigField 'String', 'GOOGLE_MAPS_API_KEY', keystoreProperties['GoogleMapsApiKey'];
        it.buildConfigField 'String', 'DATABASE_NAME', keystoreProperties['DatabaseName'];
        it.buildConfigField 'Integer', 'DATABASE_VERSION', keystoreProperties['DatabaseVersion'];
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    configurations.all {
        resolutionStrategy.force 'com.google.code.findbugs:jsr305:3.0.1'
    }
}

repositories {
    maven {url "https://clojars.org/repo/"}
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    androidTestCompile(libraries.espressoCore, {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile libraries.supportAppCompat
    compile libraries.supportConstraintLayout
    compile libraries.supportDesign
    compile libraries.supportPreference

    compile libraries.butterKnife
    annotationProcessor libraries.butterKnifeCompiler

    compile libraries.retrofit
    compile libraries.retrofitRxAdapter
    compile libraries.retrofitGsonConverter

    compile libraries.rxbinding
    compile libraries.rxbinding_v7
    compile libraries.rxjava
    compile libraries.rxandroid

    compile libraries.firebase

    compile libraries.picasso
    compile libraries.dagger
    annotationProcessor libraries.daggerProcessor

    compile libraries.googlePlaces

    compile libraries.storIO
    compile libraries.storIOAnnotations
    annotationProcessor libraries.storIOProcessor

    testCompile libraries.junit
    testCompile libraries.robolectric
    testCompile libraries.powermock
    testCompile libraries.powermockJunit
    testCompile libraries.powermockApi
    testCompile libraries.powermockRule
    testCompile libraries.powermockClassloader

    compile 'com.facebook.stetho:stetho:1.5.0'
    compile 'com.facebook.stetho:stetho-okhttp:1.5.0'

    androidTestCompile libraries.espressoCore
    androidTestCompile libraries.supportAnnotations
}